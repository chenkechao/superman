<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.keke</groupId>
    <artifactId>superman</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <!--多个模块联合编译-->
    <modules>
        <module>superman-common</module>
        <module>superman-parent</module>
    </modules>

    <properties>
        <!-- 主要依赖库的版本定义 -->
        <springside.version>4.2.3-GA</springside.version>
        <spring.security.version>3.1.4.RELEASE</spring.security.version>
        <spring.version>3.2.12.RELEASE</spring.version>
        <hibernate.version>4.3.5.Final</hibernate.version>
        <mybatis.version>3.4.3</mybatis.version>
        <spring-data-jpa.version>1.6.0.RELEASE</spring-data-jpa.version>
        <tomcat-jdbc.version>7.0.54</tomcat-jdbc.version>
        <sitemesh.version>2.4.2</sitemesh.version>
        <shiro.version>1.2.3</shiro.version>
        <cxf.version>2.7.11</cxf.version>
        <activemq.version>5.7.0</activemq.version>
        <quartz.version>2.2.1</quartz.version>
        <jedis.version>2.8.1</jedis.version>
        <ehcache.version>2.6.9</ehcache.version>
        <spymemcached.version>2.11.6</spymemcached.version>
        <jolokia.version>1.2.1</jolokia.version>
        <hystrix.version>1.3.16</hystrix.version>
        <javasimon.version>3.5.1</javasimon.version>
        <jackson.version>2.4.0</jackson.version>
        <slf4j.version>1.7.7</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <httpclient.version>4.3.4</httpclient.version>
        <commons-lang3.version>3.3.2</commons-lang3.version>
        <commons-io.version>2.4</commons-io.version>
        <guava.version>21.0</guava.version>
        <joda-time.version>2.3</joda-time.version>
        <dozer.version>5.5.1</dozer.version>
        <freemarker.version>2.3.20</freemarker.version>
        <aspectj.version>1.7.4</aspectj.version>
        <junit.version>4.11</junit.version>
        <assertj.version>1.6.1</assertj.version>
        <mockito.version>1.10.19</mockito.version>
        <powermock.version>1.6.2</powermock.version>
        <selenium.version>2.42.2</selenium.version>
        <nosqlunit.version>0.7.9</nosqlunit.version>
        <jetty.version>7.6.15.v20140411</jetty.version>
        <h2.version>1.3.176</h2.version>
        <javatuples.version>1.2</javatuples.version>
        <!--add 2014-12-02 -->
        <hibernate-validator-version>4.3.1.Final</hibernate-validator-version>
        <log4j-version>1.2.13</log4j-version>
        <commons-loggin-version>1.2</commons-loggin-version>
        <cglib-nodep-version>2.1_3</cglib-nodep-version>
        <asm-util-version>2.2.1</asm-util-version>
        <asm-version>1.5.3</asm-version>
        <asm-commons-version>2.2.2</asm-commons-version>
        <mybatis-generator-core-version>1.3.2</mybatis-generator-core-version>
        <persistence-api-version>1.0</persistence-api-version>
        <mysql-connector-java-version>5.1.32</mysql-connector-java-version>
        <validation.version>1.0.0.GA</validation.version>
        <msm.version>1.8.0</msm.version>
        <curator.version>2.11.1</curator.version>
        <kvstore.version>1.0.0.4.RELEASE</kvstore.version>
        <!-- Plugin的属性 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <ec-quick.version>2.2.1.8.RELEASE</ec-quick.version>
        <!-- 是否跳过测试 -->
        <skip.test>false</skip.test>
        <user.version>1.0.0-SNAPSHOT</user.version>
        <galaxy-common-version>1.0.0-SNAPSHOT</galaxy-common-version>
        <eds.version>2.1.1.6.RELEASE</eds.version>
        <classfier>pg</classfier>
    </properties>
    <!--统一管理jar包version-->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.spring.platform</groupId>
                <artifactId>platform-bom</artifactId>
                <version>Athens-SR4</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- springside -->
            <dependency>
                <groupId>org.springside</groupId>
                <artifactId>springside-core</artifactId>
                <version>${springside.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springside</groupId>
                <artifactId>springside-core</artifactId>
                <version>${springside.version}</version>
                <classifier>tests</classifier>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springside</groupId>
                <artifactId>springside-extension</artifactId>
                <version>${springside.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springside</groupId>
                <artifactId>springside-extension</artifactId>
                <version>${springside.version}</version>
                <classifier>tests</classifier>
                <!--<scope>test</scope>-->
            </dependency>
            <!-- aop -->
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- j2ee web spec -->
            <!-- update to servlet 3.0 for spring 4.0 MockHttpServletRequest -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>3.0.1</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>1.2</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jsp-api</artifactId>
                <version>2.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>javax.servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- WEB end -->
            <!-- mybatis -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>1.3.1</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java-version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>1.0.29</version>
            </dependency>

            <!-- google java library -->
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <!-- joda -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time-jsptags</artifactId>
                <version>1.1.1</version>
            </dependency>
            <!-- joda for jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- GENERAL UTILS end -->

            <!-- LOGGING begin -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j-version}</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-loggin-version}</version>
            </dependency>
            <!-- slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- logback -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- 代码直接调用log4j会被桥接到slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 代码直接调用commons-logging会被桥接到slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- 代码直接调用java.util.logging会被桥接到slf4j -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- log4jdbc -->
            <dependency>
                <groupId>com.googlecode.log4jdbc</groupId>
                <artifactId>log4jdbc</artifactId>
                <version>1.2</version>
                <scope>runtime</scope>
            </dependency>
            <!-- LOGGING end -->

            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>${validation.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>${persistence-api-version}</version>
            </dependency>

            <dependency>
                <groupId>org.javatuples</groupId>
                <artifactId>javatuples</artifactId>
                <version>${javatuples.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <!-- 负责管理构件的发布,指定Maven分发构件的位置
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://116.228.114.190:8089/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://116.228.114.190:8089/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>
    -->
    <!--远程仓库的配置
    <repositories>
        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>YMDD-Repositories</id>
            <url>http://116.228.114.190:8089/nexus/content/groups/public/</url>
        </repository>
    </repositories>
    -->
</project>